{"version":3,"sources":["bankapp.js","App.js","reportWebVitals.js","index.js"],"names":["BankApplication","props","Bankcity","obj","cityname","target","value","fetchBankDetails","url","axios","get","then","res","setState","data","columns","label","field","sort","rows","catch","err","console","log","state","this","className","onSubmit","handleSubmit","onChange","bind","striped","bordered","small","paging","searching","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAkIeA,E,kDA7HX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,SAAW,SAACC,GAER,EAAKC,SAAUD,EAAIE,OAAOC,MAC1B,EAAKC,oBAfU,EAkBnBA,iBAAmB,WACf,IAAIC,EAAI,GACR,OAAQ,EAAKJ,UACT,IAAK,OAAQI,EAAM,yDACf,MACJ,IAAK,WAAWA,EAAM,8DAClB,MACJ,IAAK,UAAUA,EAAM,4DACjB,MACJ,IAAK,QAAQA,EAAM,0DACf,MACJ,QAASA,EAAM,2DAEnBC,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVC,KAAM,CACFC,QAAS,CACL,CACIC,MAAO,cACPC,MAAO,OACPC,KAAM,OAGV,CACIF,MAAO,UACPC,MAAO,UACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,UACPC,KAAM,OAEV,CACIF,MAAO,OACPC,MAAO,OACPC,KAAM,OAEV,CACIF,MAAO,WACPC,MAAO,WACPC,KAAM,OAEV,CACIF,MAAO,QACPC,MAAO,QACPC,KAAM,OAEV,CACIF,MAAO,YACPC,MAAO,YACPC,KAAM,QAIdC,KAAMP,EAAIE,WAIrBM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAjF9B,EAAKG,MAAQ,CACTV,KAAM,IAET,EAAKV,SAAS,GALA,E,qDAQnB,WACIqB,KAAKlB,qB,oBA6ET,WACI,OACI,sBAAKmB,UAAU,iBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,eAAd,6BAEJ,qBAAKA,UAAU,sBAAf,SACA,sBAAMC,SAAUF,KAAKG,aAArB,SACI,yBAAQF,UAAU,eAAepB,MAAOmB,KAAKD,MAAMlB,MAAOuB,SAAUJ,KAAKvB,SAAS4B,KAAKL,MAAvF,UACI,wBAAQnB,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,6BAMZ,qBAAKoB,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACIK,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLnB,KAAMW,KAAKD,MAAMV,KACjBoB,QAAQ,EACRC,WAAW,e,GAnHTC,aCQfC,MATf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.e17bcece.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport axios from 'axios';\r\n\r\nclass BankApplication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: ''\r\n        }\r\n         this.cityname=''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchBankDetails();\r\n    }\r\n\r\n    Bankcity = (obj) => {\r\n        \r\n        this.cityname= obj.target.value\r\n        this.fetchBankDetails();\r\n    }\r\n\r\n    fetchBankDetails = () => {\r\n        let url=\"\";\r\n        switch (this.cityname) {\r\n            case \"Pune\": url = \"https://vast-shore-74260.herokuapp.com/banks?city=PUNE\";\r\n                break;\r\n            case \"Banglore\":url = \"https://vast-shore-74260.herokuapp.com/banks?city=BANGALORE\";\r\n                break;\r\n            case \"Kolkata\":url = \"https://vast-shore-74260.herokuapp.com/banks?city=KOLKATA\";\r\n                break; \r\n            case \"Delhi\":url = \"https://vast-shore-74260.herokuapp.com/banks?city=DELHI\";\r\n                break;\r\n            default: url = \"https://vast-shore-74260.herokuapp.com/banks?city=MUMBAI\";\r\n        }\r\n        axios.get(url)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: {\r\n                        columns: [\r\n                            {\r\n                                label: 'IFSC Number',\r\n                                field: 'ifsc',\r\n                                sort: 'asc'\r\n                            },\r\n\r\n                            {\r\n                                label: 'Bank Id',\r\n                                field: 'bank_id',\r\n                                sort: 'asc'\r\n                            },\r\n                            {\r\n                                label: 'Branch',\r\n                                field: 'branch',\r\n                                sort: 'asc'\r\n                            },\r\n                            {\r\n                                label: 'Address',\r\n                                field: 'address',\r\n                                sort: 'asc'\r\n                            },\r\n                            {\r\n                                label: 'City',\r\n                                field: 'city',\r\n                                sort: 'asc'\r\n                            },\r\n                            {\r\n                                label: 'District',\r\n                                field: 'district',\r\n                                sort: 'asc'\r\n                            },\r\n                            {\r\n                                label: 'State',\r\n                                field: 'state',\r\n                                sort: 'asc'\r\n                            },\r\n                            {\r\n                                label: 'Bank Name',\r\n                                field: 'bank_name',\r\n                                sort: 'asc'\r\n                            },\r\n                        ],\r\n\r\n                        rows: res.data\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <h3 className=\"text-primary\">Bank Branches</h3>\r\n                    </div>\r\n                    <div className=\"col-lg-4 form-group\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <select className=\"form-control\" value={this.state.value} onChange={this.Bankcity.bind(this)}>\r\n                            <option value=\"Mumbai\">Mumbai</option>\r\n                            <option value=\"Pune\">Pune</option>\r\n                            <option value=\"Banglore\">Banglore</option>\r\n                            <option value=\"Kolkata\">Kolkata</option>\r\n                            <option value=\"Delhi\">Delhi</option>\r\n                        </select>\r\n                        </form>\r\n                    </div>\r\n                \r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-lg-12\">\r\n                        <MDBDataTable\r\n                            striped\r\n                            bordered\r\n                            small\r\n                            data={this.state.data}\r\n                            paging={true}\r\n                            searching={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BankApplication;","import './App.css';\nimport BankApplication from './bankapp';\n\nfunction App() {\n  return (\n    <div>\n      <BankApplication/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}